buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        //mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.8.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility=1.8
project.group="weatherstation"
project.version="0.4.0"

jar {
    baseName = 'weatherstation'
}

// When 'gradle run' is issued, set profile to DEV 
run {
    systemProperty "spring.profiles.active", "dev"
}

repositories {
    //mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

dependencies {
    compile("org.springframework:spring-core")
    compile("org.springframework.boot:spring-boot-starter-data-jpa") {
    	exclude module: 'spring-boot-starter-logging'
    }
    compile("org.springframework.boot:spring-boot-starter-web") {
    	exclude module: 'spring-boot-starter-logging'
    }
    compile("org.springframework.boot:spring-boot-starter-log4j")
    
    compile("com.h2database:h2")
    compile("org.springframework.data:spring-data-rest-webmvc")
    compile("commons-io:commons-io:2.4");
    compile("org.apache.httpcomponents:httpclient:4.3.3")
    compile("org.springframework:spring-test") // Class DelegetingOutputStream is used by logging filter
    compile("com.ecyrd.speed4j:speed4j:0.4")
    compile('mysql:mysql-connector-java:5.1.6')
    
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    
    testCompile("junit:junit")
    testCompile("org.hamcrest:hamcrest-all:1.3")
    testCompile("org.mockito:mockito-core")
    testCompile("com.jayway.jsonpath:json-path:0.9.1")
    testCompile("com.jayway.jsonpath:json-path-assert:0.9.1")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// Does not work yet! Tries to upload both WAR and JAR file
configurations {
    deployerJars
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar    
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${beosign_maven_base_url}/libs-${project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release' }-local") {
            	 authentication(userName: beosign_maven_user, password: beosign_maven_password)
            }
        }
    }
}